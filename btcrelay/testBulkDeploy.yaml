# Deploy contracts
-
  deploy:
    BtcRelayUtil:
      contract: btcrelayUtil.py
      gas: 3000000
      gas_price: 10000000000000
      wait: True

-
  deploy:
    BtcRelay:
      contract: btcrelay.py
      gas: 3000000
      gas_price: 10000000000000
      wait: True

-
  deploy:
    BridgeWithBulkStore:
      contract: btcBulkStoreHeaders.py
      gas: 3000000
      gas_price: 10000000000000
      wait: True

# Set dependencies
-
  transact:
    SetUtilForRelay:
      gas: 3000000
      gas_price: 10000000000000
      to: $BtcRelay
      fun_name: setRelayUtil
      sig: i
      data:
        - $BtcRelayUtil
      wait: True
-
  transact:
    SetRelayForBridge:
      gas: 3000000
      gas_price: 10000000000000
      to: $BridgeWithBulkStore
      fun_name: setBtcRelay
      sig: i
      data:
        - $BtcRelay
      wait: True

# genesis is block300K previous
-
  transact:
    TestingOnlySetGenesis:
      gas: 3000000
      gas_price: 10000000000000
      to: $BtcRelay
      fun_name: testingonlySetGenesis
      sig: i
      data:
        - 0x000000000000000067ecc744b5ae34eebbde14d21ca4db51652e4d67e155f07e
      wait: True


# The binary data has 10 headers from block 300K, but we only store 7 otherwise OOG
# Storing 7 currently uses 3M - 21,000 gas.
-
  transact:
    Store7Headers:
      gas: 3000000
      gas_price: 10000000000000
      to: $BridgeWithBulkStore
      fun_name: bulkStoreHeader
      sig: si
      data:
        - \x02\x00\x00\x00~\xf0U\xe1gM.eQ\xdb\xa4\x1c\xd2\x14\xde\xbb\xee4\xae\xb5D\xc7\xecg\x00\x00\x00\x00\x00\x00\x00\x00\xd3\x99\x89c\xf8\x0c[\xabC\xfe\x8c&"\x8e\x98\xd00\xed\xf4\xdc\xbeH\xa6f\xf5\xc3\x9e-z\x88\\\x91\x02\xc8mSl\x89\x00\x19Y:G\r\x02\x00\x00\x00Tr\xac\x8b\x11\x87\xbf\xcf\x91\xd6\xd2\x18\xbb\xda\x1e\xb2@]|U\xf1\xf8\xcc\x82\x00\x00\x00\x00\x00\x00\x00\x00\xab\n\xaa7|\xa3\xf4\x9b\x15E\xe2\xaek\x06g\xa0\x8fB\xe7-\x8c$\xae#q@\xe2\x8f\x14\xf3\xbb|k\xccmSl\x89\x00\x19\xed\xd8<\xcf\x02\x00\x00\x00\xa9\xab\x12\xe3,\xed\xdc+\xa5\xe6\xade\x1f\xacw,\x986\xdf\x83M\x91\xa0I\x00\x00\x00\x00\x00\x00\x00\x00\xdfuu\xc7\x8f\x83\x1f \xaf\x14~\xa7T\xe5\x84\xaa\xd9Yeiic-\xa9x\xd2\xddq\x86#\xfd0\xc5\xccmSl\x89\x00\x19\xe6Q\x07\xe9\x02\x00\x00\x00,P\x1f\xc0\xb0\xfd\xe9\xb3\xc1\x0e#S\xc1TI*5k\x1a\x02)^+\x86\x00\x00\x00\x00\x00\x00\x00\x00\xa7\xaaa\xc8\xd3|\x88v\xba\xa0\x17\x9ej2\x94D4\xbf\xd3\xe1\xccug\x89*1K\x0c{\x9e]\x92\'\xcemSl\x89\x00\x19\xa4\xa0<{\x02\x00\x00\x00\xe7\xfc\x91>+y\n0v\x0c\xaa\xfb\x9b_\xaa\xe1\xb5\x1dlT\xff\xe4\xae\x82\x00\x00\x00\x00\x00\x00\x00\x00P\xad\x11k\xfb\x11c\x03\x03a\xd9}H\xb4\xca\x90\'\xa4\x9b\xca\xf8\xb8\xd4!\x1b\xaa\x92\xccr\xe7\xe1#f\xcfmSl\x89\x00\x19\xe6\x13\x9c\x82\x02\x00\x00\x00W\xd5\x14X\x00\x18$\x90\x80\x8e&\xf25\xe2\xa2\x8a\x90;{\xfc\xcb\x8f\xa9\x84\x00\x00\x00\x00\x00\x00\x00\x00\xb1d\xfdM\x88<~Q\xe8\xa6y\xaau\x9b;v\xc0\xea\xbd\x0c\xa4\xd6\xbe\x91\xe5\x82\xd6\xd0\xa7\x91\xb5\x92&\xd0mSl\x89\x00\x19\x8fV\'\x99\x02\x00\x00\x00o\n\x9c/$\xf8\x86\x1cZI\x8f\xb8\x963\xfdf\xc0\xa2\xaea#\xd7"Z\x00\x00\x00\x00\x00\x00\x00\x00r\xe0\xdb\xbe%\xed2\x04\x89\xd9a\x9a!\x0b~\'I\x82\xd6\x9a\xbdP\x83\xf3;;\x17:#\x05\x9d\x1fv\xd1mSl\x89\x00\x19j\xa2\xd6H\x02\x00\x00\x00i\xf4k\x9c7\xad\xe4\xabz\t\\`<\xff\x0c\x86C\xef\xc1\xf5t\x8faw\x00\x00\x00\x00\x00\x00\x00\x00Hxx<\x9f\xbd\xea\xb8\t\x88\xc6\xceI5\x84\xac\x11uI\x12\xcc\xdc*;+\xd6\x8a\x16\xae\x0e\x00\xfb<\xd2mSl\x89\x00\x19\xd7\xc1<\xe1\x02\x00\x00\x009\xc2\x90\xe7P\x19\x18\x87YD\xb1\xee\xd0\xc4:\x1c\xf2\x05\x07lv\t\x1d\x80\x00\x00\x00\x00\x00\x00\x00\x00\xa9u\xcfA\xe6\x83\xb3\xfa\x88I\xc69&\xca7\x16\xbb\x0b\xed]\xd0\xc7\x80\x99[o`\xe1I#\x0c\x7f\xf0\xd2mSl\x89\x00\x19\xdbJ\xaf\t\x02\x00\x00\x00\xb4\xb5K\x19\x923\xac\xf8=o\xd6\xfb\xdb\xdc\xe9\xd38\x0e7"D\xfe7\x08\x00\x00\x00\x00\x00\x00\x00\x00X\xff\x01\x0e5\x15\x9a:\x048/\xae\xb5bm\xf3b\xff\xc0\xcf\xb1\x08\t1\xe2\xda\x16\xc5J\x1b\x1a\x94\x1e\xd2mSl\x89\x00\x19~\xa9(@
        - 7
      wait: True
